"use client"

import Header from "@/components/header"
import Footer from "@/components/footer"
import { Calculator, Recycle, Droplets, Factory } from "lucide-react"
import { useState } from "react"

export default function CalculatorHub() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-emerald-50 flex flex-col">
      <Header />
      <main className="flex-1 container mx-auto px-4 py-12">
        <div className="max-w-4xl mx-auto text-center mb-12">
          <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-green-500 to-blue-500 rounded-2xl mb-6 shadow-lg">
            <Calculator className="w-10 h-10 text-white" />
          </div>
          <h1 className="text-4xl lg:text-5xl font-bold text-gray-800 mb-4">–ö–∞–ª–∫—É–ª–∞—Ç–æ—Ä–µ–Ω –¶–µ–Ω—Ç—ä—Ä</h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏, –∑–∞ –¥–∞ —Ä–∞–∑–±–µ—Ä–µ—Ç–µ –≤–∞—à–µ—Ç–æ –≤—ä–∑–¥–µ–π—Å—Ç–≤–∏–µ –≤—ä—Ä—Ö—É –æ–∫–æ–ª–Ω–∞—Ç–∞ —Å—Ä–µ–¥–∞ –∏ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ—Ç–æ –Ω–∞ —Ä–µ—Å—É—Ä—Å–∏!
          </p>
        </div>
        <div className="flex flex-col gap-10 max-w-2xl mx-auto items-center">
          <RecyclingCalculatorCard />
          <BauxiteWaterCalculatorCard />
          <AluminumResourceCalculatorCard />
        </div>
      </main>
      <Footer />
    </div>
  )
}

function RecyclingCalculatorCard() {
  const [waste, setWaste] = useState(0)
  const [recycled, setRecycled] = useState(0)
  const [result, setResult] = useState<null | { rate: number; co2Saved: number }>(null)

  const handleCalculate = () => {
    const rate = waste > 0 ? (recycled / waste) * 100 : 0
    const co2Saved = recycled * 1.5
    setResult({ rate, co2Saved })
  }

  return (
    <section className="w-full flex flex-col items-center px-4 py-8 bg-white/40 dark:bg-slate-900/40 rounded-xl border border-green-100/20 mb-2">
      <Recycle className="w-12 h-12 text-green-600 mb-2" />
      <h2 className="text-xl font-bold mb-1 text-green-900">–í—ä–∑–¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–µ</h2>
      <p className="text-green-800/90 mb-4 text-center font-medium text-base">–í–∏–∂—Ç–µ –∫–∞–∫ –≤–∞—à–∏—Ç–µ –Ω–∞–≤–∏—Ü–∏ –∑–∞ —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–µ –ø–æ–º–∞–≥–∞—Ç –Ω–∞ –ø–ª–∞–Ω–µ—Ç–∞—Ç–∞ –∏ –Ω–∞–º–∞–ª—è–≤–∞—Ç –æ—Ç–ø–∞–¥—ä—Ü–∏—Ç–µ.</p>
      <div className="flex w-full max-w-xs gap-2 mb-3">
        <input
          type="number"
          className="flex-1 border border-green-200 rounded-lg px-3 py-2 bg-white dark:bg-slate-800 text-base font-semibold focus:ring-2 focus:ring-green-300 outline-none transition text-center"
          value={waste}
          min={0}
          onChange={e => setWaste(Number(e.target.value))}
          placeholder="–û–±—â–æ –æ—Ç–ø–∞–¥—ä—Ü–∏ (–∫–≥/—Å–µ–¥–º–∏—Ü–∞)"
        />
        <input
          type="number"
          className="flex-1 border border-blue-200 rounded-lg px-3 py-2 bg-white dark:bg-slate-800 text-base font-semibold focus:ring-2 focus:ring-blue-300 outline-none transition text-center"
          value={recycled}
          min={0}
          onChange={e => setRecycled(Number(e.target.value))}
          placeholder="–†–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–∏ (–∫–≥/—Å–µ–¥–º–∏—Ü–∞)"
        />
      </div>
      <button
        className="w-full max-w-xs bg-green-500 text-white font-bold py-2 rounded-lg hover:bg-green-600 transition mb-3"
        onClick={handleCalculate}
      >
        ‚ôªÔ∏è –ò–∑—á–∏—Å–ª–∏ –≤—ä–∑–¥–µ–π—Å—Ç–≤–∏–µ—Ç–æ
      </button>
      <ul className="flex gap-2 mb-3 justify-center w-full max-w-xs">
        <li className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-bold">–ï–∫–æ</li>
        <li className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-bold">CO‚ÇÇ –°–ø–µ—Å—Ç—è–≤–∞–Ω–∏—è</li>
        <li className="bg-green-50 text-green-700 px-3 py-1 rounded-full text-xs font-bold">–ö—Ä—ä–≥–æ–≤–∞ –∏–∫–æ–Ω–æ–º–∏–∫–∞</li>
      </ul>
      {result && (
        <div className="bg-white/90 dark:bg-slate-800/90 rounded-lg p-4 w-full max-w-xs text-center border border-green-100/30 mt-2">
          <h3 className="text-lg font-bold text-green-900 mb-1">–í–∞—à–∏—Ç–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏</h3>
          <p className="text-base text-gray-800 mb-1">–ü—Ä–æ—Ü–µ–Ω—Ç –Ω–∞ —Ä–µ—Ü–∏–∫–ª–∏—Ä–∞–Ω–µ: <span className="font-bold text-green-900">{result.rate.toFixed(1)}%</span></p>
          <p className="text-base text-gray-800">–°–ø–µ—Å—Ç–µ–Ω–∏ CO‚ÇÇ: <span className="font-bold text-green-900">{result.co2Saved.toFixed(2)} –∫–≥/—Å–µ–¥–º–∏—Ü–∞</span></p>
        </div>
      )}
    </section>
  )
}

function BauxiteWaterCalculatorCard() {
  const [bauxite, setBauxite] = useState(0)
  const [result, setResult] = useState<null | { waterUsed: number }>(null)

  const handleCalculate = () => {
    const waterUsed = bauxite * 3
    setResult({ waterUsed })
  }

  return (
    <section className="w-full flex flex-col items-center px-4 py-8 bg-white/40 dark:bg-slate-900/40 rounded-xl border border-blue-100/20 mb-2">
      <Droplets className="w-12 h-12 text-blue-600 mb-2" />
      <h2 className="text-xl font-bold mb-1 text-blue-900">–ö–æ–Ω—Å—É–º–∞—Ü–∏—è –Ω–∞ –≤–æ–¥–∞ –ø—Ä–∏ –±–æ–∫—Å–∏—Ç</h2>
      <p className="text-blue-800/90 mb-4 text-center font-medium text-base">–ò–∑—á–∏—Å–ª–µ—Ç–µ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ—Ç–æ –Ω–∞ –≤–æ–¥–∞ –ø—Ä–∏ –¥–æ–±–∏–≤ –Ω–∞ –±–æ–∫—Å–∏—Ç –∏ –Ω–µ–≥–æ–≤–∏—Ç–µ –µ–∫–æ–ª–æ–≥–∏—á–Ω–∏ –µ—Ñ–µ–∫—Ç–∏.</p>
      <div className="flex w-full max-w-xs gap-2 mb-3">
        <input
          type="number"
          className="flex-1 border border-blue-200 rounded-lg px-3 py-2 bg-white dark:bg-slate-800 text-base font-semibold focus:ring-2 focus:ring-blue-300 outline-none transition"
          value={bauxite}
          min={0}
          onChange={e => setBauxite(Number(e.target.value))}
          placeholder="–ë–æ–∫—Å–∏—Ç (—Ç–æ–Ω–∞/—Å–µ–¥–º–∏—Ü–∞)"
        />
      </div>
      <button
        className="w-full max-w-xs bg-blue-500 text-white font-bold py-2 rounded-lg hover:bg-blue-600 transition mb-3"
        onClick={handleCalculate}
      >
        üíß –ò–∑—á–∏—Å–ª–∏ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–∞—Ç–∞ –≤–æ–¥–∞
      </button>
      <ul className="flex gap-2 mb-3">
        <li className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-bold">–í—ä–∑–¥–µ–π—Å—Ç–≤–∏–µ –≤—ä—Ä—Ö—É –≤–æ–¥–∞—Ç–∞</li>
        <li className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-bold">–î–æ–±–∏–≤</li>
        <li className="bg-blue-50 text-blue-700 px-3 py-1 rounded-full text-xs font-bold">–û–ø–∞–∑–≤–∞–Ω–µ</li>
      </ul>
      {result && (
        <div className="bg-white/90 dark:bg-slate-800/90 rounded-lg p-4 w-full max-w-xs text-center border border-blue-100/30 mt-2">
          <h3 className="text-lg font-bold text-blue-900 mb-1">–í–∞—à–∏—Ç–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏</h3>
          <p className="text-base text-gray-800">–ò–∑–ø–æ–ª–∑–≤–∞–Ω–∞ –≤–æ–¥–∞: <span className="font-bold text-blue-900">{result.waterUsed.toLocaleString()} –º¬≥/—Å–µ–¥–º–∏—Ü–∞</span></p>
        </div>
      )}
    </section>
  )
}

function AluminumResourceCalculatorCard() {
  const [aluminum, setAluminum] = useState(0)
  const [result, setResult] = useState<null | { bauxite: number; energy: number; water: number; aluminum: number }>(null)

  const handleCalculate = () => {
    const bauxite = aluminum * 4
    const energy = aluminum * 15
    const water = bauxite * 3 // 3 m¬≥ per ton of bauxite
    setResult({ bauxite, energy, water, aluminum })
  }

  return (
    <section className="w-full flex flex-col items-center px-4 py-8 bg-white/40 dark:bg-slate-900/40 rounded-xl border border-purple-100/20 mb-2">
      <Factory className="w-12 h-12 text-purple-600 mb-2" />
      <h2 className="text-xl font-bold mb-1 text-purple-900">–†–µ—Å—É—Ä—Å–∏ –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –Ω–∞ –∞–ª—É–º–∏–Ω–∏–π</h2>
      <p className="text-purple-800/90 mb-4 text-center font-medium text-base">–ò–∑—á–∏—Å–ª–µ—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏—Ç–µ –±–æ–∫—Å–∏—Ç –∏ –µ–Ω–µ—Ä–≥–∏—è –∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –Ω–∞ –∞–ª—É–º–∏–Ω–∏–π.</p>
      <div className="flex w-full max-w-xs gap-2 mb-3">
        <input
          type="number"
          className="flex-1 border border-purple-200 rounded-lg px-3 py-2 bg-white dark:bg-slate-800 text-base font-semibold focus:ring-2 focus:ring-purple-300 outline-none transition"
          value={aluminum}
          min={0}
          onChange={e => setAluminum(Number(e.target.value))}
          placeholder="–ê–ª—É–º–∏–Ω–∏–π (—Ç–æ–Ω–∞/—Å–µ–¥–º–∏—Ü–∞)"
        />
      </div>
      <button
        className="w-full max-w-xs bg-purple-500 text-white font-bold py-2 rounded-lg hover:bg-purple-600 transition mb-3"
        onClick={handleCalculate}
      >
        üè≠ –ò–∑—á–∏—Å–ª–∏ —Ä–µ—Å—É—Ä—Å–∏—Ç–µ
      </button>
      <ul className="flex gap-2 mb-3">
        <li className="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-xs font-bold">–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ</li>
        <li className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-bold">–ë–æ–∫—Å–∏—Ç</li>
        <li className="bg-purple-50 text-purple-700 px-3 py-1 rounded-full text-xs font-bold">–ï–Ω–µ—Ä–≥–∏—è</li>
      </ul>
      {result && (
        <div className="bg-white/90 dark:bg-slate-800/90 rounded-lg p-4 w-full max-w-xs text-center border border-purple-100/30 mt-2">
          <h3 className="text-lg font-bold text-purple-900 mb-1">–í–∞—à–∏—Ç–µ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏</h3>
          <p className="text-base text-gray-800 mb-1">–ù–µ–æ–±—Ö–æ–¥–∏–º –±–æ–∫—Å–∏—Ç: <span className="font-bold text-purple-900">{result.bauxite.toLocaleString()} —Ç–æ–Ω–∞/—Å–µ–¥–º–∏—Ü–∞</span></p>
          <p className="text-base text-gray-800 mb-1">–ò–∑–ø–æ–ª–∑–≤–∞–Ω–∞ –≤–æ–¥–∞: <span className="font-bold text-purple-900">{result.water.toLocaleString()} –º¬≥/—Å–µ–¥–º–∏—Ü–∞</span></p>
          <p className="text-base text-gray-800 mb-1">–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –∞–ª—É–º–∏–Ω–∏–π: <span className="font-bold text-purple-900">{result.aluminum.toLocaleString()} —Ç–æ–Ω–∞/—Å–µ–¥–º–∏—Ü–∞</span></p>
          <p className="text-base text-gray-800">–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –µ–Ω–µ—Ä–≥–∏—è: <span className="font-bold text-purple-900">{result.energy.toLocaleString()} MWh/—Å–µ–¥–º–∏—Ü–∞</span></p>
        </div>
      )}
    </section>
  )
}
